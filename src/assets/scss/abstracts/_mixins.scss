@use "sass:math";
@mixin flat_btn {
  background: none !important;
  border: none !important;
  outline: none !important;

  &::selection {
    background: none;
  }
}

@mixin remove_line {
  ::ng-deep.mat-form-field-underline {
    display: none;
  }
}

@mixin ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@mixin ellipsis_important {
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
}
@mixin ellipsis_dynamic($value) {
  display: -webkit-box;
  -webkit-line-clamp: $value;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin mat_toggler($colorvalue) {
  ::ng-deep {
    .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {
      background-color: $colorvalue;
    }

    .mat-slide-toggle.mat-checked .mat-slide-toggle-bar {
      background-color: rgba($colorvalue, 0.54);
    }
  }
}

@mixin click_press {
  cursor: pointer;

  &:active {
    transform: scale(0.98);
  }
}

@mixin hx_host {
  flex: auto;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  max-height: 100%;
}

@mixin compact {
  font-size: 14px;
  position: absolute;
  height: calc(100vh - 7.2em);
  top: 2px;
  right: 55px;
  background: #fff;
  opacity: 0;
  transform: scaleX(0);
  transform-origin: right;
  will-change: transform;
  z-index: 8;
  transition: all 0.5s ease;

  &.open {
    transform: scaleX(1);
    opacity: 1;
    box-shadow: 0 7px 15px -2px rgba(0, 0, 0, 0.3);
  }
}

@mixin min_max_h($value) {
  max-height: $value;
  min-height: $value;
}

@mixin min_max_w($value) {
  max-width: $value;
  min-width: $value;
}
@mixin min_max_w_h($value) {
  height: $value;
  height: $value;
  max-width: $value;
  max-height: $value;
  min-width: $value;
  min-height: $value;
}

@mixin width_height($value) {
  width: $value;
  height: $value;
}

@mixin center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin mat_form_height {
  ::ng-deep .mat-form-field-flex > .mat-form-field-infix {
    padding: 0.4em 0px !important;
  }

  ::ng-deep .mat-form-field-label-wrapper {
    top: -1.5em;
  }

  ::ng-deep
    .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float
    .mat-form-field-label {
    transform: translateY(-1.1em) scale(0.75);
    width: 133.33333%;
  }

  ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline-start {
    border-radius: 0 !important;
  }

  ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline-start,
  ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline-end {
    border: 1px solid currentColor;
    border-radius: 0 !important;
    border-top: none !important;
    border-left: none !important;
    border-right: none !important;
  }
}

@mixin mat_field_underline_color($value) {
  ::ng-deep.mat-form-field-underline {
    background: $value !important;
  }
}

// Below Mixing only will work on Appearance = "outline"

@mixin mat_field_height($value) {
  .mat-form-field {
    ::ng-deep .mat-form-field-flex > .mat-form-field-infix {
      padding: $value 0px !important;
    }
    ::ng-deep .mat-form-field-label-wrapper {
      top: math.div($value, $value) + -1.8rem;
    }
    ::ng-deep
      .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float
      .mat-form-field-label {
      transform: translateY(-1.1em) scale(0.75);
      width: 133.33333%;
    }
    ::ng-deep .mat-form-field-appearance-outline .mat-form-field-wrapper {
      margin: 0 !important;
    }
  }
}

@mixin spinner_color($value) {
  ::ng-deep .mat-spinner {
    svg {
      circle {
        stroke: $value;
      }
    }
  }
}

@mixin mat_tab_active_color($value) {
  ::ng-deep.mat-ink-bar {
    background: $value;
  }
}

@mixin mat_checkBox_color($value) {
  &.mat-checkbox-checked {
    .mat-checkbox-background {
      background: $value;
    }
  }
}

// only for appearance="outline"
@mixin matform_field_padd_margin_none {
  ::ng-deep.mat-form-field-wrapper {
    margin: 0;
    padding: 0;
  }
}

@mixin slim_scroll($value, $track) {
  scrollbar-width: thin;
  &::-webkit-scrollbar {
    width: 0.5rem;
    height: 0.5rem;
    background: $track;
  }
  &::-webkit-scrollbar-track {
    -webkit-border-radius: 0.625rem;
    border-radius: 0.625rem;
    background: $track;
  }
  &::-webkit-scrollbar-thumb:window-inactive {
    background: $value;
  }
  &::-webkit-scrollbar-thumb {
    -webkit-border-radius: 0.5rem;
    border-radius: 0.5rem;
    // width: 8px;
    background: $value, 5%;
  }
  &::-webkit-scrollbar-thumb:hover {
    width: 1.25rem;
  }
}

@mixin toggle_button_custom($value) {
  .toggle_btn {
    border: 1px solid #ccc;
    display: inline-block;
    padding: 0.3rem 1rem;
    position: relative;
    text-align: center;
    transition: background 600ms ease, color 600ms ease;
    border-radius: 0 4px 4px 0;
    &:nth-child(2) {
      border-radius: 4px 0 0 4px;
    }
  }
  label {
    margin: 0;
  }
  input[type="radio"].toggle {
    display: none;
    & + label {
      cursor: pointer;
      min-width: 60px;
      &:hover {
        background: none;
        color: $value;
      }
      &:after {
        content: "";
        height: 100%;
        position: absolute;
        top: 0;
        transition: left 200ms cubic-bezier(0.77, 0, 0.175, 1);
        width: 100%;
        z-index: -1;
        background: $value;
      }
    }
    &.toggle-left + label {
      border-right: 0;
      &:after {
        left: 100%;
      }
    }
    &.toggle-right + label {
      border-left: 0;
      &:after {
        left: -100%;
      }
    }
    &:checked + label {
      cursor: default;
      color: #fff;

      transition: color 200ms;
      &:after {
        left: 0;
      }
    }
  }
}
